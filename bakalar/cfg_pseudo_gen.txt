		/* Inicializácia */
0.	Zmaž uzly, ktoré sa podieľajú na riešení úlohy, ktorých pracovný balíček je už dokončený, buď úspešne (finished) alebo neúspešne (exhausted)	
	if Niektorý z balíčkov presiahol stanovenú dobu ukončenia then
1.		nastav jeho stav na finished (12)

2.	foreach Bežiaci pracovný balíček (stav ≥ 10) do
3.		if Nie je nastavený čas zahájenia then
4.			Nastáva čas zahájenia na aktuálny čas

5.		if K balíčku sa viažu masky hesiel then
6.			Ulož ích do príslušného poľa, ktoré odpovedá balíčku

7.		Nájdi uzly, ktoré sa majú podieľať na výpočte (a zatiaľ sa nepodieľajú) a ulož ich do databázy

		/* Benchmark */
8.		foreach Pridelený aktívny uzol, ktorý ma stav Benchmark (0) do
9.			if Uzol ešte nemá naplánovaný benchmark then
10.				Naplánuj benchmark pre tento uzol


		/* Výpočet */
11.		foreach Aktívny uzol v stave Normal (1) do
12.			if Počet naplánovaných úloh pre uzol ≥ 2 then
13.				Pokračuj na ďalší uzol

14.			if Stav uzlu je Running (10) then
15.				Vygeneruj novú úlohu podľa typu balíčka, prípadne znovu prideľ nedokončené úlohy
	
16.			if Stav uzlu je Finished (12) then
17.				Znovu prideľ nedokončené úlohy, ak taká neexistuje, nastav stav uzlu na Done (3)

			/* Kontrola stavu */
18.			if Stav balíčka je Finished (12) a neobsahuje žiadne úlohy then
19.				if Aktuálny čas > plánovaný Čas ukončenia then
20.					Nastav stav balíčka na Timeout (4)
				else
21.					if Aktuálny index ≥ maximálny index then
22.						Nastav stav balíčku na Exhausted (2)
						/* vyčerpaný stavový priestor */
					else
23.						Nastav stav balíčku na Ready(0)
						/* výpočet bol pozastavený */

24.	Čakaj stanovený časový interval

